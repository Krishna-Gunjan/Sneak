def isBetweenClosedWalls(map, x, y):
    """ Check if a position is between two close walls horizontally with less than 3 spaces """

    k = 1
    while map[y][x - k] != '#':
        k += 1
    l = 1
    while map[y][x + l] != '#':
        l += 1
    
    if k > 3 or l > 3: return True
    else: return False


map
for y in range(15):
    for x in range(68):
        if map[y][x] == '$':
            print(isBetweenClosedWalls(map, x, y))
